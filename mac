#!/usr/bin/env zsh
### end common-components/zsh-shebang

# Welcome to the thoughtbot laptop script! Be prepared to turn your laptop (or
# desktop, no haters here) into an awesome development machine.

# This file is auto-generated. Do not edit it by hand unless you know what
# you're doing. Please see 'CONTRIBUTING.md' for more information.
### end common-components/header

trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

set -e
### end common-components/exit-trap

LOG_FILE="/tmp/laptop-$(hostname)-install.log"

fancy_echo() {
  printf "\033[34m::\033[37m %b\n" "$1"
}

install() {
  sudo aptitude install -y "$1" >> $LOG_FILE
}

update_repos() {
  sudo aptitude update >> $LOG_FILE
}
### end common-components/shared-functions

if [[ -f /etc/zshenv ]]; then
  fancy_echo "Fixing OSX zsh environment bug ..."
    sudo mv /etc/{zshenv,zshrc}
fi
### end mac-components/zsh-fix

if (( ! $+commands[brew] )); then
  fancy_echo "Installing Homebrew, a good OS X package manager ..."
    ruby <(curl -fsS https://raw.github.com/mxcl/homebrew/go/install)
    brew update

  if ! grep -qs "recommended by brew doctor" ~/.zshrc; then
    fancy_echo "Put Homebrew location earlier in PATH ..."
      echo "\n# recommended by brew doctor" >> ~/.zshrc
      echo "export PATH=\"/usr/local/bin:\$PATH\"\n" >> ~/.zshrc
      source ~/.zshrc
  fi
else
  fancy_echo "Homebrew already installed. Skipping ..."
fi
### end mac-components/homebrew

fancy_echo "Installing The Silver Searcher (better than ack or grep) to search the contents of files ..."
  brew install the_silver_searcher

fancy_echo "Installing vim from Homebrew to get the latest version ..."
  brew install vim

fancy_echo "Installing ctags, to index files for vim tab completion of methods, classes, variables ..."
  brew install ctags

fancy_echo "Installing Fasd for quick access to files and directories (inspired by autojump, z and v) ..."
  brew install fasd
### end mac-components/packages

fancy_echo "Installing rbenv, to change Ruby versions ..."
  brew install rbenv

  if ! grep -qs "rbenv init" ~/.zshrc; then
    echo 'eval "$(rbenv init - --no-rehash)"' >> ~/.zshrc

    fancy_echo "Enable shims and autocompletion ..."
      eval "$(rbenv init -)"
  fi

  source ~/.zshrc

fancy_echo "Installing rbenv-gem-rehash so the shell automatically picks up binaries after installing gems with binaries..."
  brew install rbenv-gem-rehash

fancy_echo "Installing ruby-build, to install Rubies ..."
  brew install ruby-build
### end mac-components/rbenv

fancy_echo "Installing GNU Compiler Collection, a necessary prerequisite to installing Ruby ..."
  brew tap homebrew/dupes
  brew install apple-gcc42

fancy_echo "Upgrading and linking OpenSSL ..."
  brew install openssl

export CC=gcc-4.2
### end mac-components/compiler-and-libraries

fancy_echo "Installing Ruby 2.0.0-p353 ..."
  rbenv install 2.0.0-p353

fancy_echo "Setting Ruby 2.0.0-p353 as global default Ruby ..."
  rbenv global 2.0.0-p353
  rbenv rehash

fancy_echo "Updating to latest Rubygems version ..."
  gem update --system

fancy_echo "Installing Bundler to install project-specific Ruby gems ..."
  gem install bundler --no-document --pre

fancy_echo "Installing Rails ..."
  gem install rails --no-document
### end common-components/ruby-environment

fancy_echo "Configuring Bundler for faster, parallel gem installation ..."
  number_of_cores=`sysctl -n hw.ncpu`
  bundle config --global jobs `expr $number_of_cores - 1`
### end mac-components/bundler

fancy_echo "Installing Heroku CLI client ..."
  brew install heroku-toolbelt

fancy_echo "Installing the heroku-config plugin to pull config variables locally to be used as ENV variables ..."
  heroku plugins:install git://github.com/ddollar/heroku-config.git
### end mac-components/heroku

fancy_echo "Configuring Vim ..."
  cd
  git clone git://github.com/obxhdx/vimfiles.git
  cd vimfiles
  rake
### end common-components/prezto

fancy_echo "Installing Prezto, the configuration framework for Zsh ..."
  cd
  git clone --recursive git://github.com/obxhdx/prezto.git
  cd prezto
  rake
### end common-components/vim

